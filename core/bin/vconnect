#!/bin/bash

. $NETKIT_HOME/netkit.conf

export TMUX='' # allow nesting of tmux sessions

RETRY_COUNT=1
RETRY_INTERVAL=5

tmux_connect(){ # $1 = machine name
    podman exec -it "$1" /bin/bash
}

open_terminal(){ # $1 = machine name
    if [ -z ${TERM_TYPE+x} ]; then
        echo "No terminal set in netkit.conf."
        exit 1
    fi
    case "$TERM_TYPE" in
        alacritty)          TERMCMD="alacritty -e";;
        kitty)              TERMCMD="kitty";;
        konsole)            TERMCMD="konsole --nofork -e";;
        konsole-tab)        TERMCMD="$NETKIT_HOME/bin/konsole-tabs.sh -e";;
        xterm)              TERMCMD="xterm -e";;
        wsl)
            powershell.exe -Command "start wsl -ArgumentList @('--', 'tmux', '-L', 'netkit', 'attach', '-t="$1"')"
            exit
            ;;
        wt)
            powershell.exe -Command "wt.exe -p netkit wsl.exe -- tmux -L netkit attach -t="$1""
            exit
            ;;
        *)
            echo "[vconnect]: terminal $TERM_TYPE not supported, defaulting to xterm."
            TERMCMD="xterm -e";;
    esac
    echo "running nohup $TERMCMD podman exec -it "$1" /bin/bash &> /dev/null &"
    nohup $TERMCMD podman exec -it "$1" /bin/bash &> /dev/null &
}

print_help(){
    echo
    echo -e " vconnect - connect to the tmux session of a netkit virtual machine."
    echo
    echo -e " Example: vconnect -m web --terminal --retry-count 3 --interval 5"
    echo
    echo -e "\toptions:"
    echo
    echo -e "\t-h | --help                       Print this Help."
    echo -e "\t-l | --list                       List all running sessions on the tmux 'netkit' server."
    echo -e "\t-t | --terminal                   Connect to the tmux session from a new terminal. The terminal opened is dependent on the TERM_TYPE set in netkit.conf."
    echo -e "\t-m | --machine MACHINENEAME       Name of the machine to connect to."
    echo -e "\t-r | --retry-count N              Number of times to attempt to connect to a tmux session."
    echo -e "\t-n | --interval X                 Sleep duration between attempts to connect to a tmux session."
    echo
}

# from https://medium.com/@Drew_Stokes/bash-argument-parsing-54f3b81a6a8f

while (( "$#" )); do
  case "$1" in
    -h|--help)
      print_help
      exit
      ;;
    -l|--list)
      LIST_ONLY="TRUE"
      shift
      ;;
    -t|--terminal)
      OPEN_TERM="TRUE"
      shift
      ;;
    -r|--retry-count)
      if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
        RETRY_COUNT=$2
        shift 2
      else
        echo "Error: Argument for $1 is missing" >&2
        exit 1
      fi
      ;;
    -n|--interval)
      if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
        RETRY_INTERVAL=$2
        shift 2
      else
        echo "Error: Argument for $1 is missing" >&2
        exit 1
      fi
      ;;
    -m|--machine)
      if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
        MACHINE_NAME=$2
        shift 2
      else
        echo "Error: Argument for $1 is missing" >&2
        exit 1
      fi
      ;;
    *)
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
  esac
done

if [ -z ${MACHINE_NAME+x} ]; then
    echo "Machine name not given."
    print_help
    exit 1
fi

if [ "$OPEN_TERM" = "TRUE" ]; then
    open_terminal $MACHINE_NAME
else
    tmux_connect $MACHINE_NAME
fi
